data = {
    'syllabus_text': 'LLMinators\nFAIRHIRE : AI Powered Hiring Assitant\nShah and Anchor kutchi COE & A.C. Patil COE\nAI-Powered Productivity Tool\nTeam Name\nLLMinators\nInstitute name\nShah and Anchor kutchi College of Engineering\nA. C. Patil College of Engineering\nTeam Members >\n1 (Leader)\n2\n3\n4\nName\nTejas Sutar\nAaryan Kamerkar\nIram Ansari\nKrishi Prasad\nBatch\n2022-26\n2022-26\n2022-26\n2022-26\nTeam member details\nProblem\nProblem Statement:\nRecruiters waste hours reviewing irrelevant resumes and scattered candidate profiles across\nmultiple platforms (LinkedIn, GitHub, etc.).\nTraditional hiring processes often carry unconscious bias during interviews, affecting fair\ncandidate evaluation.\nThere’s no unified system to track, analyze, and justify hiring decisions with data-backed evidence.\nProblem Validation:\nFunctionalities of product\nProduct’s USP :\nCombines resume, GitHub, LinkedIn, and portfolio with real-time interview analysis for a\ncomplete candidate profile.\nGenerates smart, personalized follow-up questions using pre-screened data and live\nconversation context.\nProduces a unified report with bias detection, sentiment analysis, and a transparent hiring\nverdict.\nTechnology Used & Licensed Tools :\nUses Whisper for transcription and Sentence-BERT + FAISS for JD matching, all open-source.\nLangChain + Hugging Face models (e.g., Mistral) for summaries, bias check, and follow-ups ,\nopen-source.\nApify scrapes LinkedIn, GitHub, and portfolios — freemium, no paid tools required.\nTechnology Used & Licensed Tools :\nThe product is highly scalable — new job templates can be added easily by updating the JD\nmatching logic and scoring metrics, without changing the core AI or workflow.\nProduct Specifications\nTechnical specifications\nPhysical Specifications\nWhisper\nFrontend\nReactjs\nBeautifulsoup\nBias Handling\nSummarization \nFollow-ups\nApify Backend\nLLM models\nOPENAI\nGemini\nHugging face\nArchitecture\nOverall Architecture\nTechnical Architecture\nProgramming language will be used:\nPython (for backend, AI/ML processing)\nJavaScript (React.js for frontend)\nSoftware Modules:\nResume & Profile Scraping Module\nCandidate Pre-screening & JD Matching Module\nLive Interview Analyzer (Transcription, Sentiment, Bias Detection)\nSmart Follow-up Generator\nFinal Report Generator\nCloude solution that will be used:\nRender or Railway – for backend & database hosting\nOpenAI or Hugging Face APIs – for optional AI features (integrated via API calls)\nBrief on Programming Module\nUsecase\nHR Manager / \nRecruiter\nCandidate upload \ninformation (Resume,\nLinkedinID, Portfolio\netc.\nFairHire analyzes candidate\nprofile, scores skills, and\nmatches with JD\nHR starts live\ninterview \nwith FairHire enabled\nFairHire transcribes\nresponses, detects\nsentiment & bias, and\nsuggests follow-up\nquestions\nSystem creates a final\nfit score + hire/reject\ndecision\nHR reviews AI-\ngenerated report and\nmakes hiring decision\nInforms follow-ups\nwith candidate data.\nExecution plan\n1.Define Requirements: Identify core features and user needs.\n2.Design Architecture: Plan system modules and tech stack.\n3.Develop Core Modules: Build pre-screening, interview analysis, and report generation.\n4.Integrate & Connect: Link all components into a working system.\n5.Test & Deploy: Run MVP tests and deploy on cloud (Render/Railway).\nFairHire Execution plan\n',
    'syllabus_key_points': ['FairHire', 'AI-Powered Hiring', 'Bias Detection', 'Resume Analysis', 'Interview Analysis'],
    'notes_text': 'FairHire + HiringExpert: Project Documentation\nProblem Statement\nCurrent hiring processes are often biased, time-consuming, and lack structured candidate evaluation.\nInterviewers may unintentionally show bias, miss key insights, or fail to ask relevant follow-ups.\nWhat is Expected\nBuild an AI assistant for interviewers that:\n- Transcribes and analyzes interviews in real-time\n- Summarizes candidate answers\n- Detects bias, sentiment, and engagement\n- Suggests intelligent follow-up questions\n- Generates a complete candidate report with ranking and JD-fit score\n- Integrates with HiringExpert for resume analysis, GitHub/LinkedIn insights, and portfolio summaries\nSolution Overview\nFairHire is an intelligent, real-time AI interview assistant.\nHiringExpert is a supporting module for pre-interview candidate evaluation (resumes + external links).\nSystem Modules\nFairHire Core Modules (Live Interview AI):\n- Audio Transcription\n- Answer Summarizer\n- Sentiment & Engagement Analyzer\n- Bias Detector\n- Follow-up Generator\n- Candidate Scoring Agent\nHiringExpert Modules (Pre-Interview):\n- Resume Parser\n- GitHub Analyzer\n- LinkedIn & Portfolio Scraper\nFairHire + HiringExpert: Project Documentation\n- Suitability Score Calculator\nSystem Workflow\n1. Recruiter inputs JD + candidate resume + links (GitHub/LinkedIn)\n2. HiringExpert parses resume and scrapes online profiles\n3. FairHire listens to the live interview and transcribes in real-time\n4. LLM agents:\n    Summarize answers\n    Analyze tone & engagement\n    Detect bias\n    Suggest follow-ups\n5. At end: system generates a single-page report\nTech Stack (Fully Open Source)\nLLM/NLP: DeepSeek / Mistral + LangChain\nTranscription: OpenAI Whisper\nBackend: FastAPI / Flask\nFrontend: React + Tailwind CSS\nData Storage: PostgreSQL / SQLite / JSON\nScraping: Apify, Requests + BeautifulSoup\nRAG / Search: FAISS\nDeployment: Render / Railway / Vercel\nUse Case\n- Tech companies hiring developers or analysts\n- Reduces unconscious bias and improves fairness\n- Saves interviewers time with instant reports\n- Great for campus recruitment and HR tools\nChallenges\nFairHire + HiringExpert: Project Documentation\nReal-time processing  Async LLM + streaming STT\nBias detection reliability  LLM + keyword triggers\nScraper blocking  Authenticated, slow scraping\nPrivacy issues  Consent + local processing\nScaling LLM usage  Open-source models\nFinal Output Example\nCandidate: Tejas Sutar\n- Interview Highlights: Strong in LLMs, confident answers, explained EXAGRAM in detail\n- Bias Flag: None\n- GitHub: Active with 3 starred repos\n- LinkedIn: Recent NLP project post\n- JD Match: 92%\n- Recommended for Next Round\nSummary for Teammates\nFairHire = Live AI interview assistant (transcription, analysis, follow-ups)\nHiringExpert = Pre-interview analyzer (resume, GitHub, LinkedIn)\nTogether, they form a bias-free, automated hiring intelligence system.\n',
    'notes_key_points': ['AI Interview Assistant', 'Bias Detection', 'Candidate Evaluation', 'Hiring Process Automation', 'Real-time Transcription'],
    'weightage_tags': ['FairHire', 'Bias Detection', 'candidate evaluation', 'hiring process automation'],
    'sections': [{
        'type': 'Answer the following',
        'count': 4,
        'marks': 4
    }, {
        'type': 'MCQ',
        'count': 4,
        'marks': 2
    }]
}

text = data['syllabus_text']
print(text)